{
  "contractName": "PriceChecker",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "fidaPerEther",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ETHEUR",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "ids",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_priceCheckerAddress",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_price",
          "type": "string"
        }
      ],
      "name": "PriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_fees",
          "type": "uint256"
        }
      ],
      "name": "NewOraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_description",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_fees",
          "type": "uint256"
        }
      ],
      "name": "OraclizeQueryNotSend",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updatePrice",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_gasLimit",
          "type": "uint256"
        }
      ],
      "name": "changeGasLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60c0604052600960808190527f3537312e3835303030000000000000000000000000000000000000000000000060a090815262000040916006919062001144565b5063036892e860075561e4e660095560405160208062002940833981016040525160058054600160a060020a031916600160a060020a0383161790556200008f64010000000062000096810204565b50620011e6565b600030600160a060020a031631620000f56040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506009546200037d640100000000026401000000009004565b111562000203577f3cc796735354d9bb4604eeb9a6d0323a88e66a6c6fd67a5b2b49ea5846b1b7476200016c6040805190810160405280600381526020017f55524c000000000000000000000000000000000000000000000000000000000081525062000641640100000000026401000000009004565b604080516020810192909252808252604b828201527f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6560608301527f6173652061646420736f6d652045544820746f20636f76657220666f7220746860808301527f652071756572792066656500000000000000000000000000000000000000000060a0830152519081900360c00190a16200037a565b620002d86040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604d81526020017f6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f707581526020017f626c69632f5469636b65723f706169723d455448455552292e726573756c742e81526020017f584554485a4555522e615b305d00000000000000000000000000000000000000815250600954620008fc640100000000026401000000009004565b600081815260086020908152604091829020805460ff191660011790558151808301909252600382527f55524c0000000000000000000000000000000000000000000000000000000000908201529091507fb6826b9da99334b1afae1d80ff40054e6e5e2605f0d9626cf120f65c2f5091c9908290620003619064010000000062000641810204565b6040805192835260208301919091528051918290030190a15b50565b60008054600160a060020a03161580620003b45750600054620003b290600160a060020a031664010000000062000d5f810204565b155b15620003d157620003cf600064010000000062000d63810204565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200043d57600080fd5b505af115801562000452573d6000803e3d6000fd5b505050506040513d60208110156200046957600080fd5b5051600154600160a060020a039081169116146200053b576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620004ed57600080fd5b505af115801562000502573d6000803e3d6000fd5b505050506040513d60208110156200051957600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b600154604080517f2ef3accc0000000000000000000000000000000000000000000000000000000081526024810185905260048101918252855160448201528551600160a060020a0390931692632ef3accc9287928792829160640190602086019080838360005b83811015620005bd578181015183820152602001620005a3565b50505050905090810190601f168015620005eb5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156200060c57600080fd5b505af115801562000621573d6000803e3d6000fd5b505050506040513d60208110156200063857600080fd5b50519392505050565b60008054600160a060020a031615806200067857506000546200067690600160a060020a031664010000000062000d5f810204565b155b15620006955762000693600064010000000062000d63810204565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200070157600080fd5b505af115801562000716573d6000803e3d6000fd5b505050506040513d60208110156200072d57600080fd5b5051600154600160a060020a03908116911614620007ff576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620007b157600080fd5b505af1158015620007c6573d6000803e3d6000fd5b505050506040513d6020811015620007dd57600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b6001546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152855160248401528551600160a060020a039094169363524f388993879383926044909201919085019080838360005b838110156200087a57818101518382015260200162000860565b50505050905090810190601f168015620008a85780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015620008c857600080fd5b505af1158015620008dd573d6000803e3d6000fd5b505050506040513d6020811015620008f457600080fd5b505192915050565b600080548190600160a060020a031615806200093557506000546200093390600160a060020a031664010000000062000d5f810204565b155b15620009525762000950600064010000000062000d63810204565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620009be57600080fd5b505af1158015620009d3573d6000803e3d6000fd5b505050506040513d6020811015620009ea57600080fd5b5051600154600160a060020a0390811691161462000abc576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000a6e57600080fd5b505af115801562000a83573d6000803e3d6000fd5b505050506040513d602081101562000a9a57600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b600154604080517f2ef3accc0000000000000000000000000000000000000000000000000000000081526024810186905260048101918252875160448201528751600160a060020a0390931692632ef3accc9289928892829160640190602086019080838360005b8381101562000b3e57818101518382015260200162000b24565b50505050905090810190601f16801562000b6c5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801562000b8d57600080fd5b505af115801562000ba2573d6000803e3d6000fd5b505050506040513d602081101562000bb957600080fd5b50519050670de0b6b3a76400003a84020181111562000bdc576000915062000d57565b6001546040517fc51be90f00000000000000000000000000000000000000000000000000000000815260006004820181815260648301879052608060248401908152895160848501528951600160a060020a039095169463c51be90f948794938c938c938c93604481019160a49091019060208801908083838c5b8381101562000c7157818101518382015260200162000c57565b50505050905090810190601f16801562000c9f5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b8381101562000cd457818101518382015260200162000cba565b50505050905090810190601f16801562000d025780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801562000d2557600080fd5b505af115801562000d3a573d6000803e3d6000fd5b50505050506040513d602081101562000d5257600080fd5b505191505b509392505050565b3b90565b600062000d7864010000000062000d7e810204565b92915050565b60008062000da9731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed64010000000062000d5f810204565b111562000e275760008054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81527f6574685f6d61696e6e6574000000000000000000000000000000000000000000602082015262000e1e906401000000006200112b810204565b50600162001128565b600062000e5173c03a2615d5efaf5f49f60b7bb6583eaec212fdf164010000000062000d5f810204565b111562000ec65760008054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e330000000000000000000000000000000000000000602082015262000e1e906401000000006200112b810204565b600062000ef073b7a07bcf2ba2f2703b24c0691b5278999c59ac7e64010000000062000d5f810204565b111562000f655760008054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981527f6574685f6b6f76616e0000000000000000000000000000000000000000000000602082015262000e1e906401000000006200112b810204565b600062000f8f73146500cfd35b22e4a392fe0adc06de1a1368ed4864010000000062000d5f810204565b1115620010045760008054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81527f6574685f72696e6b656279000000000000000000000000000000000000000000602082015262000e1e906401000000006200112b810204565b60006200102e736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47564010000000062000d5f810204565b111562001064575060008054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475179055600162001128565b60006200108e7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf64010000000062000d5f810204565b1115620010c4575060008054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf179055600162001128565b6000620010ee7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa64010000000062000d5f810204565b111562001124575060008054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa179055600162001128565b5060005b90565b80516200114090600290602084019062001144565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200118757805160ff1916838001178555620011b7565b82800160010185558215620011b7579182015b82811115620011b75782518255916020019190600101906200119a565b50620011c5929150620011c9565b5090565b6200112891905b80821115620011c55760008155600101620011d0565b61174a80620011f66000396000f3006080604052600436106100695763ffffffff60e060020a60003504166327dc297e811461006e57806338bbfa50146100ce578063673a7e281461016a578063957b52fb14610172578063a3d646fe14610199578063baf539ee14610223578063cf7b4a091461023b575b600080fd5b34801561007a57600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100cc9583359536956044949193909101919081908401838280828437509497506102679650505050505050565b005b3480156100da57600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100cc95833595369560449491939091019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506103779650505050505050565b6100cc61037c565b34801561017e57600080fd5b506101876103a1565b60408051918252519081900360200190f35b3480156101a557600080fd5b506101ae6103a7565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e85781810151838201526020016101d0565b50505050905090810190601f1680156102155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022f57600080fd5b506100cc600435610435565b34801561024757600080fd5b50610253600435610455565b604080519115158252519081900360200190f35b61026f61046a565b600160a060020a031633600160a060020a031614151561028e57600080fd5b60008281526008602052604090205460ff1615156001146102ae57600080fd5b80516102c1906006906020840190611686565b506102cd81600561065c565b60075560408051838152602080820183815284519383019390935283517f0ca598019410e2cf468f2525ac5844c86b6c9273e0f125dbe7e550ad5e7064de93869386939092606084019185019080838360005b83811015610338578181015183820152602001610320565b50505050905090810190601f1680156103655780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050565b505050565b60055433600160a060020a0390811691161461039757600080fd5b61039f610816565b565b60075481565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561042d5780601f106104025761010080835404028352916020019161042d565b820191906000526020600020905b81548152906001019060200180831161041057829003601f168201915b505050505081565b60055433600160a060020a0390811691161461045057600080fd5b600955565b60086020526000908152604090205460ff1681565b60008054600160a060020a03161580610495575060005461049390600160a060020a0316610a61565b155b156104a6576104a46000610a65565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156104f857600080fd5b505af115801561050c573d6000803e3d6000fd5b505050506040513d602081101561052257600080fd5b5051600154600160a060020a039081169116146105d7576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505050506040513d60208110156105b557600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b600160009054906101000a9004600160a060020a0316600160a060020a031663c281d19e6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561062a57600080fd5b505af115801561063e573d6000803e3d6000fd5b505050506040513d602081101561065457600080fd5b505190505b90565b6000828180805b83518110156107f95783517f30000000000000000000000000000000000000000000000000000000000000009085908390811061069c57fe5b90602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015610742575083517f39000000000000000000000000000000000000000000000000000000000000009085908390811061070a57fe5b90602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1561079b57811561076157851515610759576107f9565b600019909501945b600a830292506030848281518110151561077757fe5b90602001015160f860020a900460f860020a0260f860020a900403830192506107f1565b83818151811015156107a957fe5b90602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916602e60f860020a0214156107f157600191505b600101610663565b600086111561080b5785600a0a830292505b509095945050505050565b600030600160a060020a03163161084d60408051908101604052806003815260200160ea60020a6215549302815250600954610a75565b1115610931577f3cc796735354d9bb4604eeb9a6d0323a88e66a6c6fd67a5b2b49ea5846b1b74761089b60408051908101604052806003815260200160ea60020a6215549302815250610ce2565b604080516020810192909252808252604b828201527f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6560608301527f6173652061646420736f6d652045544820746f20636f76657220666f7220746860808301527f652071756572792066656500000000000000000000000000000000000000000060a0830152519081900360c00190a1610a5e565b6109de60408051908101604052806003815260200160ea60020a6215549302815250608060405190810160405280604d81526020017f6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f707581526020017f626c69632f5469636b65723f706169723d455448455552292e726573756c742e81526020017f584554485a4555522e615b305d00000000000000000000000000000000000000815250600954610f46565b600081815260086020908152604091829020805460ff1916600117905581518083019092526003825260ea60020a6215549302908201529091507fb6826b9da99334b1afae1d80ff40054e6e5e2605f0d9626cf120f65c2f5091c9908290610a4590610ce2565b6040805192835260208301919091528051918290030190a15b50565b3b90565b6000610a6f611347565b92915050565b60008054600160a060020a03161580610aa05750600054610a9e90600160a060020a0316610a61565b155b15610ab157610aaf6000610a65565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610b0357600080fd5b505af1158015610b17573d6000803e3d6000fd5b505050506040513d6020811015610b2d57600080fd5b5051600154600160a060020a03908116911614610be2576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610b9657600080fd5b505af1158015610baa573d6000803e3d6000fd5b505050506040513d6020811015610bc057600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b600154604080517f2ef3accc0000000000000000000000000000000000000000000000000000000081526024810185905260048101918252855160448201528551600160a060020a0390931692632ef3accc9287928792829160640190602086019080838360005b83811015610c62578181015183820152602001610c4a565b50505050905090810190601f168015610c8f5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015610caf57600080fd5b505af1158015610cc3573d6000803e3d6000fd5b505050506040513d6020811015610cd957600080fd5b50519392505050565b60008054600160a060020a03161580610d0d5750600054610d0b90600160a060020a0316610a61565b155b15610d1e57610d1c6000610a65565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610d7057600080fd5b505af1158015610d84573d6000803e3d6000fd5b505050506040513d6020811015610d9a57600080fd5b5051600154600160a060020a03908116911614610e4f576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610e0357600080fd5b505af1158015610e17573d6000803e3d6000fd5b505050506040513d6020811015610e2d57600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b6001546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152855160248401528551600160a060020a039094169363524f388993879383926044909201919085019080838360005b83811015610ec8578181015183820152602001610eb0565b50505050905090810190601f168015610ef55780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610f1457600080fd5b505af1158015610f28573d6000803e3d6000fd5b505050506040513d6020811015610f3e57600080fd5b505192915050565b600080548190600160a060020a03161580610f735750600054610f7190600160a060020a0316610a61565b155b15610f8457610f826000610a65565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610fd657600080fd5b505af1158015610fea573d6000803e3d6000fd5b505050506040513d602081101561100057600080fd5b5051600154600160a060020a039081169116146110b5576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561106957600080fd5b505af115801561107d573d6000803e3d6000fd5b505050506040513d602081101561109357600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b600154604080517f2ef3accc0000000000000000000000000000000000000000000000000000000081526024810186905260048101918252875160448201528751600160a060020a0390931692632ef3accc9289928892829160640190602086019080838360005b8381101561113557818101518382015260200161111d565b50505050905090810190601f1680156111625780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561118257600080fd5b505af1158015611196573d6000803e3d6000fd5b505050506040513d60208110156111ac57600080fd5b50519050670de0b6b3a76400003a8402018111156111cd576000915061133f565b6001546040517fc51be90f00000000000000000000000000000000000000000000000000000000815260006004820181815260648301879052608060248401908152895160848501528951600160a060020a039095169463c51be90f948794938c938c938c93604481019160a49091019060208801908083838c5b83811015611260578181015183820152602001611248565b50505050905090810190601f16801561128d5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b838110156112c05781810151838201526020016112a8565b50505050905090810190601f1680156112ed5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561130f57600080fd5b505af1158015611323573d6000803e3d6000fd5b50505050506040513d602081101561133a57600080fd5b505191505b509392505050565b600080611367731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610a61565b11156113d85760008054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81527f6574685f6d61696e6e657400000000000000000000000000000000000000000060208201526113d09061166f565b506001610659565b60006113f773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610a61565b11156114605760008054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e33000000000000000000000000000000000000000060208201526113d09061166f565b600061147f73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610a61565b11156114e85760008054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981527f6574685f6b6f76616e000000000000000000000000000000000000000000000060208201526113d09061166f565b600061150773146500cfd35b22e4a392fe0adc06de1a1368ed48610a61565b11156115705760008054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81527f6574685f72696e6b65627900000000000000000000000000000000000000000060208201526113d09061166f565b600061158f736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610a61565b11156115c3575060008054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4751790556001610659565b60006115e27320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610a61565b1115611616575060008054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf1790556001610659565b60006116357351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610a61565b1115611669575060008054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa1790556001610659565b50600090565b8051611682906002906020840190611686565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106116c757805160ff19168380011785556116f4565b828001600101855582156116f4579182015b828111156116f45782518255916020019190600101906116d9565b50611700929150611704565b5090565b61065991905b80821115611700576000815560010161170a5600a165627a7a723058200d1f36d8df1c9ebac7f8eb5027058cd201df1cc1f4a86f0664a643f4803e8d100029",
  "deployedBytecode": "0x6080604052600436106100695763ffffffff60e060020a60003504166327dc297e811461006e57806338bbfa50146100ce578063673a7e281461016a578063957b52fb14610172578063a3d646fe14610199578063baf539ee14610223578063cf7b4a091461023b575b600080fd5b34801561007a57600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100cc9583359536956044949193909101919081908401838280828437509497506102679650505050505050565b005b3480156100da57600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100cc95833595369560449491939091019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506103779650505050505050565b6100cc61037c565b34801561017e57600080fd5b506101876103a1565b60408051918252519081900360200190f35b3480156101a557600080fd5b506101ae6103a7565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e85781810151838201526020016101d0565b50505050905090810190601f1680156102155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022f57600080fd5b506100cc600435610435565b34801561024757600080fd5b50610253600435610455565b604080519115158252519081900360200190f35b61026f61046a565b600160a060020a031633600160a060020a031614151561028e57600080fd5b60008281526008602052604090205460ff1615156001146102ae57600080fd5b80516102c1906006906020840190611686565b506102cd81600561065c565b60075560408051838152602080820183815284519383019390935283517f0ca598019410e2cf468f2525ac5844c86b6c9273e0f125dbe7e550ad5e7064de93869386939092606084019185019080838360005b83811015610338578181015183820152602001610320565b50505050905090810190601f1680156103655780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050565b505050565b60055433600160a060020a0390811691161461039757600080fd5b61039f610816565b565b60075481565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561042d5780601f106104025761010080835404028352916020019161042d565b820191906000526020600020905b81548152906001019060200180831161041057829003601f168201915b505050505081565b60055433600160a060020a0390811691161461045057600080fd5b600955565b60086020526000908152604090205460ff1681565b60008054600160a060020a03161580610495575060005461049390600160a060020a0316610a61565b155b156104a6576104a46000610a65565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156104f857600080fd5b505af115801561050c573d6000803e3d6000fd5b505050506040513d602081101561052257600080fd5b5051600154600160a060020a039081169116146105d7576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505050506040513d60208110156105b557600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b600160009054906101000a9004600160a060020a0316600160a060020a031663c281d19e6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561062a57600080fd5b505af115801561063e573d6000803e3d6000fd5b505050506040513d602081101561065457600080fd5b505190505b90565b6000828180805b83518110156107f95783517f30000000000000000000000000000000000000000000000000000000000000009085908390811061069c57fe5b90602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015610742575083517f39000000000000000000000000000000000000000000000000000000000000009085908390811061070a57fe5b90602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1561079b57811561076157851515610759576107f9565b600019909501945b600a830292506030848281518110151561077757fe5b90602001015160f860020a900460f860020a0260f860020a900403830192506107f1565b83818151811015156107a957fe5b90602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916602e60f860020a0214156107f157600191505b600101610663565b600086111561080b5785600a0a830292505b509095945050505050565b600030600160a060020a03163161084d60408051908101604052806003815260200160ea60020a6215549302815250600954610a75565b1115610931577f3cc796735354d9bb4604eeb9a6d0323a88e66a6c6fd67a5b2b49ea5846b1b74761089b60408051908101604052806003815260200160ea60020a6215549302815250610ce2565b604080516020810192909252808252604b828201527f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6560608301527f6173652061646420736f6d652045544820746f20636f76657220666f7220746860808301527f652071756572792066656500000000000000000000000000000000000000000060a0830152519081900360c00190a1610a5e565b6109de60408051908101604052806003815260200160ea60020a6215549302815250608060405190810160405280604d81526020017f6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f707581526020017f626c69632f5469636b65723f706169723d455448455552292e726573756c742e81526020017f584554485a4555522e615b305d00000000000000000000000000000000000000815250600954610f46565b600081815260086020908152604091829020805460ff1916600117905581518083019092526003825260ea60020a6215549302908201529091507fb6826b9da99334b1afae1d80ff40054e6e5e2605f0d9626cf120f65c2f5091c9908290610a4590610ce2565b6040805192835260208301919091528051918290030190a15b50565b3b90565b6000610a6f611347565b92915050565b60008054600160a060020a03161580610aa05750600054610a9e90600160a060020a0316610a61565b155b15610ab157610aaf6000610a65565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610b0357600080fd5b505af1158015610b17573d6000803e3d6000fd5b505050506040513d6020811015610b2d57600080fd5b5051600154600160a060020a03908116911614610be2576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610b9657600080fd5b505af1158015610baa573d6000803e3d6000fd5b505050506040513d6020811015610bc057600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b600154604080517f2ef3accc0000000000000000000000000000000000000000000000000000000081526024810185905260048101918252855160448201528551600160a060020a0390931692632ef3accc9287928792829160640190602086019080838360005b83811015610c62578181015183820152602001610c4a565b50505050905090810190601f168015610c8f5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015610caf57600080fd5b505af1158015610cc3573d6000803e3d6000fd5b505050506040513d6020811015610cd957600080fd5b50519392505050565b60008054600160a060020a03161580610d0d5750600054610d0b90600160a060020a0316610a61565b155b15610d1e57610d1c6000610a65565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610d7057600080fd5b505af1158015610d84573d6000803e3d6000fd5b505050506040513d6020811015610d9a57600080fd5b5051600154600160a060020a03908116911614610e4f576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610e0357600080fd5b505af1158015610e17573d6000803e3d6000fd5b505050506040513d6020811015610e2d57600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b6001546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152855160248401528551600160a060020a039094169363524f388993879383926044909201919085019080838360005b83811015610ec8578181015183820152602001610eb0565b50505050905090810190601f168015610ef55780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610f1457600080fd5b505af1158015610f28573d6000803e3d6000fd5b505050506040513d6020811015610f3e57600080fd5b505192915050565b600080548190600160a060020a03161580610f735750600054610f7190600160a060020a0316610a61565b155b15610f8457610f826000610a65565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610fd657600080fd5b505af1158015610fea573d6000803e3d6000fd5b505050506040513d602081101561100057600080fd5b5051600154600160a060020a039081169116146110b5576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561106957600080fd5b505af115801561107d573d6000803e3d6000fd5b505050506040513d602081101561109357600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b600154604080517f2ef3accc0000000000000000000000000000000000000000000000000000000081526024810186905260048101918252875160448201528751600160a060020a0390931692632ef3accc9289928892829160640190602086019080838360005b8381101561113557818101518382015260200161111d565b50505050905090810190601f1680156111625780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561118257600080fd5b505af1158015611196573d6000803e3d6000fd5b505050506040513d60208110156111ac57600080fd5b50519050670de0b6b3a76400003a8402018111156111cd576000915061133f565b6001546040517fc51be90f00000000000000000000000000000000000000000000000000000000815260006004820181815260648301879052608060248401908152895160848501528951600160a060020a039095169463c51be90f948794938c938c938c93604481019160a49091019060208801908083838c5b83811015611260578181015183820152602001611248565b50505050905090810190601f16801561128d5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b838110156112c05781810151838201526020016112a8565b50505050905090810190601f1680156112ed5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561130f57600080fd5b505af1158015611323573d6000803e3d6000fd5b50505050506040513d602081101561133a57600080fd5b505191505b509392505050565b600080611367731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610a61565b11156113d85760008054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81527f6574685f6d61696e6e657400000000000000000000000000000000000000000060208201526113d09061166f565b506001610659565b60006113f773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610a61565b11156114605760008054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e33000000000000000000000000000000000000000060208201526113d09061166f565b600061147f73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610a61565b11156114e85760008054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981527f6574685f6b6f76616e000000000000000000000000000000000000000000000060208201526113d09061166f565b600061150773146500cfd35b22e4a392fe0adc06de1a1368ed48610a61565b11156115705760008054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81527f6574685f72696e6b65627900000000000000000000000000000000000000000060208201526113d09061166f565b600061158f736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610a61565b11156115c3575060008054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4751790556001610659565b60006115e27320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610a61565b1115611616575060008054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf1790556001610659565b60006116357351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610a61565b1115611669575060008054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa1790556001610659565b50600090565b8051611682906002906020840190611686565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106116c757805160ff19168380011785556116f4565b828001600101855582156116f4579182015b828111156116f45782518255916020019190600101906116d9565b50611700929150611704565b5090565b61065991905b80821115611700576000815560010161170a5600a165627a7a723058200d1f36d8df1c9ebac7f8eb5027058cd201df1cc1f4a86f0664a643f4803e8d100029",
  "sourceMap": "400:34:3:-;215:2675;400:34;;215:2675;400:34;;;;;;;;;;;;;;:::i;:::-;;498:8;468:38;;629:5;610:24;;1436:131;;;;;;;;;;;;1499:19;:42;;-1:-1:-1;;;;;;1499:42:3;-1:-1:-1;;;;;1499:42:3;;;;;1548:14;:12;;;;:14;:::i;:::-;1436:131;215:2675;;1768:478;2029:10;1855:4;-1:-1:-1;;;;;1847:21:3;;1810:34;;;;;;;;;;;;;;;;;;;1835:8;;1810:17;;;:34;;;:::i;:::-;:58;1806:436;;;1883:125;1983:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;1883:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1806:436;;;2042:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2145:8;;2042:14;;;:112;;;:::i;:::-;2162:7;;;;:3;:7;;;;;;;;;:14;;-1:-1:-1;;2162:14:3;2172:4;2162:14;;;2210:24;;;;;;;;;;;;;;;;2029:125;;-1:-1:-1;2189:46:3;;2029:125;;2210:24;;:17;;;;:24;:::i;:::-;2189:46;;;;;;;;;;;;;;;;;;;;;;1806:436;1768:478;:::o;5916:159:7:-;6007:4;3249:3;;-1:-1:-1;;;;;3249:3:7;3241:15;;3240:49;;-1:-1:-1;3280:3:7;;3260:25;;-1:-1:-1;;;;;3280:3:7;3260:11;;;;:25;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;;:35;:::i;:::-;;3237:101;3373:3;;;;;;;;;-1:-1:-1;;;;;3373:3:7;-1:-1:-1;;;;;3373:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3373:16:7;3360:8;;-1:-1:-1;;;;;3360:8:7;;;3352:37;;;3349:92;;3424:3;;;;;;;;;-1:-1:-1;;;;;3424:3:7;-1:-1:-1;;;;;3424:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3424:16:7;3403:8;:38;;-1:-1:-1;;;;;;3403:38:7;-1:-1:-1;;;;;3403:38:7;;;;;;;;;3349:92;6029:8;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6029:8:7;;;;:17;;6047:10;;6059:8;;6029:39;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6029:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6029:39:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6029:39:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6029:39:7;;5916:159;-1:-1:-1;;;5916:159:7:o;5776:134::-;5852:4;3249:3;;-1:-1:-1;;;;;3249:3:7;3241:15;;3240:49;;-1:-1:-1;3280:3:7;;3260:25;;-1:-1:-1;;;;;3280:3:7;3260:11;;;;:25;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;;:35;:::i;:::-;;3237:101;3373:3;;;;;;;;;-1:-1:-1;;;;;3373:3:7;-1:-1:-1;;;;;3373:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3373:16:7;3360:8;;-1:-1:-1;;;;;3360:8:7;;;3352:37;;;3349:92;;3424:3;;;;;;;;;-1:-1:-1;;;;;3424:3:7;-1:-1:-1;;;;;3424:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3424:16:7;3403:8;:38;;-1:-1:-1;;;;;;3403:38:7;-1:-1:-1;;;;;3403:38:7;;;;;;;;;3349:92;5874:8;;:29;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5874:8:7;;;;:17;;5892:10;;5874:29;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5874:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5874:29:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5874:29:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5874:29:7;;5776:134;-1:-1:-1;;5776:134:7:o;7112:356::-;7212:10;3249:3;;7212:10;;-1:-1:-1;;;;;3249:3:7;3241:15;;3240:49;;-1:-1:-1;3280:3:7;;3260:25;;-1:-1:-1;;;;;3280:3:7;3260:11;;;;:25;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;;:35;:::i;:::-;;3237:101;3373:3;;;;;;;;;-1:-1:-1;;;;;3373:3:7;-1:-1:-1;;;;;3373:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3373:16:7;3360:8;;-1:-1:-1;;;;;3360:8:7;;;3352:37;;;3349:92;;3424:3;;;;;;;;;-1:-1:-1;;;;;3424:3:7;-1:-1:-1;;;;;3424:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3424:16:7;3403:8;:38;;-1:-1:-1;;;;;;3403:38:7;-1:-1:-1;;;;;3403:38:7;;;;;;;;;3349:92;7246:8;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7246:8:7;;;;:17;;7264:10;;7276:8;;7246:39;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7246:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7246:39:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7246:39:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7246:39:7;;-1:-1:-1;7307:7:7;7317:11;:20;;7307:30;7299:38;;7295:52;;;7346:1;;-1:-1:-1;7339:8:7;;7295:52;7391:8;;:70;;;;;:8;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7391:8:7;;;;:27;;7425:5;;7391:8;7435:10;;7447:3;;7452:8;;7391:70;;;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7391:70:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7391:70:7;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7391:70:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7391:70:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7391:70:7;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7391:70:7;;-1:-1:-1;3452:1:7;7112:356;;;;;;:::o;25882:150::-;25998:18;;25975:51::o;3565:183::-;3628:4;3648:21;:19;;;;:21;:::i;:::-;3641:28;3565:183;-1:-1:-1;;3565:183:7:o;3753:1749::-;3801:4;;3820:55;3832:42;3820:11;;;;:55;:::i;:::-;:57;3816:245;;;3902:3;:71;;-1:-1:-1;;;;;;3902:71:7;3930:42;3902:71;;;3987:38;;;;;;;;;;;;;;;;;;;:23;;;;:38;:::i;:::-;-1:-1:-1;4046:4:7;4039:11;;3816:245;4130:1;4074:55;4086:42;4074:11;;;;:55;:::i;:::-;:57;4070:254;;;4164:3;:71;;-1:-1:-1;;;;;;4164:71:7;4192:42;4164:71;;;4249:39;;;;;;;;;;;;;;;;;;;:23;;;;:39;:::i;4070:254::-;4393:1;4337:55;4349:42;4337:11;;;;:55;:::i;:::-;:57;4333:249;;;4425:3;:71;;-1:-1:-1;;;;;;4425:71:7;4453:42;4425:71;;;4510:36;;;;;;;;;;;;;;;;;;;:23;;;;:36;:::i;4333:249::-;4651:1;4595:55;4607:42;4595:11;;;;:55;:::i;:::-;:57;4591:253;;;4685:3;:71;;-1:-1:-1;;;;;;4685:71:7;4713:42;4685:71;;;4770:38;;;;;;;;;;;;;;;;;;;:23;;;;:38;:::i;4591:253::-;4913:1;4857:55;4869:42;4857:11;;;;:55;:::i;:::-;:57;4853:201;;;-1:-1:-1;4947:3:7;:71;;-1:-1:-1;;;;;;4947:71:7;4975:42;4947:71;;;;5032:11;;4853:201;5123:1;5067:55;5079:42;5067:11;;;;:55;:::i;:::-;:57;5063:200;;;-1:-1:-1;5156:3:7;:71;;-1:-1:-1;;;;;;5156:71:7;5184:42;5156:71;;;;5241:11;;5063:200;5332:1;5276:55;5288:42;5276:11;;;;:55;:::i;:::-;:57;5272:202;;;-1:-1:-1;5367:3:7;:71;;-1:-1:-1;;;;;;5367:71:7;5395:42;5367:71;;;;5452:11;;5272:202;-1:-1:-1;5490:5:7;3753:1749;;:::o;34001:118::-;34075:37;;;;:21;;:37;;;;;:::i;:::-;;34001:118;:::o;215:2675:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;215:2675:3;;;-1:-1:-1;215:2675:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "215:2675:3:-;;;;;;;;;-1:-1:-1;;;215:2675:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2378:335;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2378:335:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2378:335:3;;-1:-1:-1;2378:335:3;;-1:-1:-1;;;;;;;2378:335:3;;;5624:146:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5624:146:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5624:146:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5624:146:7;;;;-1:-1:-1;5624:146:7;-1:-1:-1;5624:146:7;;-1:-1:-1;5624:146:7;;;;;;;;-1:-1:-1;5624:146:7;;-1:-1:-1;5624:146:7;;-1:-1:-1;;;;;;;5624:146:7;1652:112:3;;;;468:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;468:38:3;;;;;;;;;;;;;;;;;;;;400:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;400:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;400:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2758:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2758:130:3;;;;;534:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;534:35:3;;;;;;;;;;;;;;;;;;;;;;;2378:335;2462:20;:18;:20::i;:::-;-1:-1:-1;;;;;2448:34:3;:10;-1:-1:-1;;;;;2448:34:3;;2440:43;;;;;;;;2497:8;;;;:3;:8;;;;;;;;:16;;:8;:16;2489:25;;;;;;2521:16;;;;:6;;:16;;;;;:::i;:::-;;2650:20;2659:7;2668:1;2650:8;:20::i;:::-;2635:12;:35;2682:26;;;;;;;;;;;;;;;;;;;;;;;;;;2695:3;;2700:7;;2682:26;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2682:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2378:335;;:::o;5624:146:7:-;;;;:::o;1652:112:3:-;1718:19;;1704:10;-1:-1:-1;;;;;1704:33:3;;;1718:19;;1704:33;1696:42;;;;;;1745:14;:12;:14::i;:::-;1652:112::o;468:38::-;;;;:::o;400:34::-;;;;;;;;;;;;;;;-1:-1:-1;;400:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2758:130::-;2836:19;;2822:10;-1:-1:-1;;;;;2822:33:3;;;2836:19;;2822:33;2814:42;;;;;;2863:8;:20;2758:130::o;534:35::-;;;;;;;;;;;;;;;:::o;25350:112:7:-;25410:7;3249:3;;-1:-1:-1;;;;;3249:3:7;3241:15;;3240:49;;-1:-1:-1;3280:3:7;;3260:25;;-1:-1:-1;;;;;3280:3:7;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;-1:-1:-1;;;;;3373:3:7;-1:-1:-1;;;;;3373:14:7;;:16;;;;;-1:-1:-1;;;3373:16:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3373:16:7;3360:8;;-1:-1:-1;;;;;3360:8:7;;;3352:37;;;3349:92;;3424:3;;;;;;;;;-1:-1:-1;;;;;3424:3:7;-1:-1:-1;;;;;3424:14:7;;:16;;;;;-1:-1:-1;;;3424:16:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3424:16:7;3403:8;:38;;-1:-1:-1;;;;;;3403:38:7;-1:-1:-1;;;;;3403:38:7;;;;;;;;;3349:92;25435:8;;;;;;;;;-1:-1:-1;;;;;25435:8:7;-1:-1:-1;;;;;25435:18:7;;:20;;;;;-1:-1:-1;;;25435:20:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25435:20:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25435:20:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25435:20:7;;-1:-1:-1;3452:1:7;25350:112;:::o;29586:593::-;29647:4;29692:2;29647:4;;;29759:357;29776:7;:14;29774:1;:16;29759:357;;;29815:10;;:16;;:7;;29823:1;;29815:10;;;;;;;;;;;-1:-1:-1;;;29815:10:7;;-1:-1:-1;;;29815:10:7;:16;;;;;29814:38;;;;-1:-1:-1;29835:10:7;;:16;;:7;;29843:1;;29835:10;;;;;;;;;;;-1:-1:-1;;;29835:10:7;;-1:-1:-1;;;29835:10:7;:16;;;;;29814:38;29810:295;;;29875:8;29871:102;;;29909:7;;29905:49;;;29918:5;;29905:49;-1:-1:-1;;29950:4:7;;;;29905:49;29998:2;29990:10;;;;30045:2;30031:7;30039:1;30031:10;;;;;;;;;;;;;;;-1:-1:-1;;;30031:10:7;;-1:-1:-1;;;30031:10:7;-1:-1:-1;;;30026:16:7;;:21;30018:29;;;;29810:295;;;30072:7;30080:1;30072:10;;;;;;;;;;;;;;;-1:-1:-1;;;30072:10:7;;-1:-1:-1;;;30072:10:7;:16;;;30086:2;-1:-1:-1;;;30072:16:7;;30068:37;;;30101:4;30090:15;;30068:37;29792:3;;29759:357;;;30134:1;30129:2;:6;30125:26;;;30149:2;30145;:6;30137:14;;;;30125:26;-1:-1:-1;30168:4:7;;29586:593;-1:-1:-1;;;;;29586:593:7:o;1768:478:3:-;2029:10;1855:4;-1:-1:-1;;;;;1847:21:3;;1810:34;;;;;;;;;;;;;;;-1:-1:-1;;;;;1810:34:3;;;1835:8;;1810:17;:34::i;:::-;:58;1806:436;;;1883:125;1983:24;;;;;;;;;;;;;;;-1:-1:-1;;;;;1983:24:3;;;:17;:24::i;:::-;1883:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1806:436;;;2042:112;;;;;;;;;;;;;;;-1:-1:-1;;;;;2042:112:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2145:8;;2042:14;:112::i;:::-;2162:7;;;;:3;:7;;;;;;;;;:14;;-1:-1:-1;;2162:14:3;2172:4;2162:14;;;2210:24;;;;;;;;;;;-1:-1:-1;;;;;2210:24:3;;;;2029:125;;-1:-1:-1;2189:46:3;;2029:125;;2210:24;;:17;:24::i;:::-;2189:46;;;;;;;;;;;;;;;;;;;;;;1806:436;1768:478;:::o;25882:150:7:-;25998:18;;25975:51::o;3565:183::-;3628:4;3648:21;:19;:21::i;:::-;3641:28;3565:183;-1:-1:-1;;3565:183:7:o;5916:159::-;6007:4;3249:3;;-1:-1:-1;;;;;3249:3:7;3241:15;;3240:49;;-1:-1:-1;3280:3:7;;3260:25;;-1:-1:-1;;;;;3280:3:7;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;-1:-1:-1;;;;;3373:3:7;-1:-1:-1;;;;;3373:14:7;;:16;;;;;-1:-1:-1;;;3373:16:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3373:16:7;3360:8;;-1:-1:-1;;;;;3360:8:7;;;3352:37;;;3349:92;;3424:3;;;;;;;;;-1:-1:-1;;;;;3424:3:7;-1:-1:-1;;;;;3424:14:7;;:16;;;;;-1:-1:-1;;;3424:16:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3424:16:7;3403:8;:38;;-1:-1:-1;;;;;;3403:38:7;-1:-1:-1;;;;;3403:38:7;;;;;;;;;3349:92;6029:8;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6029:8:7;;;;:17;;6047:10;;6059:8;;6029:39;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6029:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6029:39:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6029:39:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6029:39:7;;5916:159;-1:-1:-1;;;5916:159:7:o;5776:134::-;5852:4;3249:3;;-1:-1:-1;;;;;3249:3:7;3241:15;;3240:49;;-1:-1:-1;3280:3:7;;3260:25;;-1:-1:-1;;;;;3280:3:7;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;-1:-1:-1;;;;;3373:3:7;-1:-1:-1;;;;;3373:14:7;;:16;;;;;-1:-1:-1;;;3373:16:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3373:16:7;3360:8;;-1:-1:-1;;;;;3360:8:7;;;3352:37;;;3349:92;;3424:3;;;;;;;;;-1:-1:-1;;;;;3424:3:7;-1:-1:-1;;;;;3424:14:7;;:16;;;;;-1:-1:-1;;;3424:16:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3424:16:7;3403:8;:38;;-1:-1:-1;;;;;;3403:38:7;-1:-1:-1;;;;;3403:38:7;;;;;;;;;3349:92;5874:8;;:29;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5874:8:7;;;;:17;;5892:10;;5874:29;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5874:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5874:29:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5874:29:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5874:29:7;;5776:134;-1:-1:-1;;5776:134:7:o;7112:356::-;7212:10;3249:3;;7212:10;;-1:-1:-1;;;;;3249:3:7;3241:15;;3240:49;;-1:-1:-1;3280:3:7;;3260:25;;-1:-1:-1;;;;;3280:3:7;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;-1:-1:-1;;;;;3373:3:7;-1:-1:-1;;;;;3373:14:7;;:16;;;;;-1:-1:-1;;;3373:16:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3373:16:7;3360:8;;-1:-1:-1;;;;;3360:8:7;;;3352:37;;;3349:92;;3424:3;;;;;;;;;-1:-1:-1;;;;;3424:3:7;-1:-1:-1;;;;;3424:14:7;;:16;;;;;-1:-1:-1;;;3424:16:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3424:16:7;3403:8;:38;;-1:-1:-1;;;;;;3403:38:7;-1:-1:-1;;;;;3403:38:7;;;;;;;;;3349:92;7246:8;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7246:8:7;;;;:17;;7264:10;;7276:8;;7246:39;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7246:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7246:39:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7246:39:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7246:39:7;;-1:-1:-1;7307:7:7;7317:11;:20;;7307:30;7299:38;;7295:52;;;7346:1;;-1:-1:-1;7339:8:7;;7295:52;7391:8;;:70;;;;;:8;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7391:8:7;;;;:27;;7425:5;;7391:8;7435:10;;7447:3;;7452:8;;7391:70;;;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7391:70:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7391:70:7;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7391:70:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7391:70:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7391:70:7;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7391:70:7;;-1:-1:-1;3452:1:7;7112:356;;;;;;:::o;3753:1749::-;3801:4;3876:1;3820:55;3832:42;3820:11;:55::i;:::-;:57;3816:245;;;3902:3;:71;;-1:-1:-1;;;;;;3902:71:7;3930:42;3902:71;;;3987:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;-1:-1:-1;4046:4:7;4039:11;;3816:245;4130:1;4074:55;4086:42;4074:11;:55::i;:::-;:57;4070:254;;;4164:3;:71;;-1:-1:-1;;;;;;4164:71:7;4192:42;4164:71;;;4249:39;;;;;;;;;;;;;;;;;;;:23;:39::i;4070:254::-;4393:1;4337:55;4349:42;4337:11;:55::i;:::-;:57;4333:249;;;4425:3;:71;;-1:-1:-1;;;;;;4425:71:7;4453:42;4425:71;;;4510:36;;;;;;;;;;;;;;;;;;;:23;:36::i;4333:249::-;4651:1;4595:55;4607:42;4595:11;:55::i;:::-;:57;4591:253;;;4685:3;:71;;-1:-1:-1;;;;;;4685:71:7;4713:42;4685:71;;;4770:38;;;;;;;;;;;;;;;;;;;:23;:38::i;4591:253::-;4913:1;4857:55;4869:42;4857:11;:55::i;:::-;:57;4853:201;;;-1:-1:-1;4947:3:7;:71;;-1:-1:-1;;;;;;4947:71:7;4975:42;4947:71;;;;5032:11;;4853:201;5123:1;5067:55;5079:42;5067:11;:55::i;:::-;:57;5063:200;;;-1:-1:-1;5156:3:7;:71;;-1:-1:-1;;;;;;5156:71:7;5184:42;5156:71;;;;5241:11;;5063:200;5332:1;5276:55;5288:42;5276:11;:55::i;:::-;:57;5272:202;;;-1:-1:-1;5367:3:7;:71;;-1:-1:-1;;;;;;5367:71:7;5395:42;5367:71;;;;5452:11;;5272:202;-1:-1:-1;5490:5:7;3753:1749;:::o;34001:118::-;34075:37;;;;:21;;:37;;;;;:::i;:::-;;34001:118;:::o;215:2675:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;215:2675:3;;;-1:-1:-1;215:2675:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.4.23;\n\nimport \"./oraclizeAPI_0.5.sol\";\n\n/**\n * @title Price Checker\n * @author Bram Hoven\n * @notice Retrieves the current Ether price in euros and converts it to the amount of fida per ether\n */\ncontract PriceChecker is usingOraclize {\n\n  // The address that is allowed to call the `updatePrice()` function\n  address priceCheckerAddress;\n  // Current price of ethereum in euros\n  string public ETHEUR = \"571.85000\";\n  // Amount of fida per ether\n  uint256 public fidaPerEther = 57185000;\n  // Latest callback id\n  mapping(bytes32 => bool) public ids;\n  // Gaslimit to be used by oraclize\n  uint256 gasLimit = 58598;\n\n  /**\n   * @notice Triggered when price is updated\n   * @param _id Oraclize query id\n   * @param _price Price of 1 ether in euro's\n   */\n  event PriceUpdated(bytes32 _id, string _price);\n  /**\n   * @notice Triggered when updatePrice() is called\n   * @param _id Oraclize query id\n   * @param _fees The price of the oraclize call in ether\n   */\n  event NewOraclizeQuery(bytes32 _id, uint256 _fees);\n\n  /**\n   * @notice Triggered when fee is lower than this.balance\n   * @param _description String with message\n   * @param _fees The amount of wei it cost to perform this query\n   */\n  event OraclizeQueryNotSend(string _description, uint256 _fees);\n\n  /**\n   * @notice Contructor for initializing the pricechecker\n   * @param _priceCheckerAddress Address which is allow to call `updatePrice()`\n   */\n  constructor(address _priceCheckerAddress) public payable {\n    priceCheckerAddress = _priceCheckerAddress;\n\n    _updatePrice();\n  }\n\n  /**\n   * @notice Function for updating the price stored in this contract\n   */\n  function updatePrice() public payable {\n    require(msg.sender == priceCheckerAddress);\n\n    _updatePrice();\n  }\n\n  function _updatePrice() private {\n    if (oraclize_getPrice(\"URL\", gasLimit) > address(this).balance) {\n      emit OraclizeQueryNotSend(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\", oraclize_getPrice(\"URL\"));\n    } else {\n      bytes32 id = oraclize_query(\"URL\", \"json(https://api.kraken.com/0/public/Ticker?pair=ETHEUR).result.XETHZEUR.a[0]\", gasLimit);\n      ids[id] = true;\n      emit NewOraclizeQuery(id, oraclize_getPrice(\"URL\"));\n    }\n  }\n\n  /**\n   * @notice Oraclize callback function\n   * @param _id The id of the query\n   * @param _result Result of the query\n   */\n  function __callback(bytes32 _id, string _result) public {\n    require(msg.sender == oraclize_cbAddress());\n    require(ids[_id] == true);\n\n    ETHEUR = _result;\n    // Save price of ether as an uint without the 5 decimals (350.00000 * 10**5 = 35000000)\n    fidaPerEther = parseInt(_result, 5);\n\n    emit PriceUpdated(_id, _result);\n  }\n\n  /**\n   * @notice Change gasLimit\n   */\n  function changeGasLimit(uint256 _gasLimit) public {\n    require(msg.sender == priceCheckerAddress);\n\n    gasLimit = _gasLimit;\n  }\n}\n",
  "sourcePath": "/home/shinxs/Projects/fida/contracts/PriceChecker.sol",
  "ast": {
    "absolutePath": "/home/shinxs/Projects/fida/contracts/PriceChecker.sol",
    "exportedSymbols": {
      "PriceChecker": [
        1336
      ]
    },
    "id": 1337,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1171,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/home/shinxs/Projects/fida/contracts/oraclizeAPI_0.5.sol",
        "file": "./oraclizeAPI_0.5.sol",
        "id": 1172,
        "nodeType": "ImportDirective",
        "scope": 1337,
        "sourceUnit": 7297,
        "src": "26:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1173,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7296,
              "src": "240:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$7296",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 1174,
            "nodeType": "InheritanceSpecifier",
            "src": "240:13:3"
          }
        ],
        "contractDependencies": [
          7296
        ],
        "contractKind": "contract",
        "documentation": "@title Price Checker\n@author Bram Hoven\n@notice Retrieves the current Ether price in euros and converts it to the amount of fida per ether",
        "fullyImplemented": true,
        "id": 1336,
        "linearizedBaseContracts": [
          1336,
          7296
        ],
        "name": "PriceChecker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1176,
            "name": "priceCheckerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1336,
            "src": "329:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1175,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "329:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1179,
            "name": "ETHEUR",
            "nodeType": "VariableDeclaration",
            "scope": 1336,
            "src": "400:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1177,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "400:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3537312e3835303030",
              "id": 1178,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "423:11:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_16c24a9ed6f62880c5ffaf6710bd823b8f723f3c9abe430ede325cfd5f075b35",
                "typeString": "literal_string \"571.85000\""
              },
              "value": "571.85000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1182,
            "name": "fidaPerEther",
            "nodeType": "VariableDeclaration",
            "scope": 1336,
            "src": "468:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1180,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "468:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3537313835303030",
              "id": 1181,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "498:8:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_57185000_by_1",
                "typeString": "int_const 57185000"
              },
              "value": "57185000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1186,
            "name": "ids",
            "nodeType": "VariableDeclaration",
            "scope": 1336,
            "src": "534:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 1185,
              "keyType": {
                "id": 1183,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "542:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "534:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 1184,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "553:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1189,
            "name": "gasLimit",
            "nodeType": "VariableDeclaration",
            "scope": 1336,
            "src": "610:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1187,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "610:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3538353938",
              "id": 1188,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "629:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_58598_by_1",
                "typeString": "int_const 58598"
              },
              "value": "58598"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@notice Triggered when price is updated\n@param _id Oraclize query id\n@param _price Price of 1 ether in euro's",
            "id": 1195,
            "name": "PriceUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "indexed": false,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "795:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "indexed": false,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "808:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "794:28:3"
            },
            "src": "776:47:3"
          },
          {
            "anonymous": false,
            "documentation": "@notice Triggered when updatePrice() is called\n@param _id Oraclize query id\n@param _fees The price of the oraclize call in ether",
            "id": 1201,
            "name": "NewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1197,
                  "indexed": false,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "1005:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1199,
                  "indexed": false,
                  "name": "_fees",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "1018:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1004:28:3"
            },
            "src": "982:51:3"
          },
          {
            "anonymous": false,
            "documentation": "@notice Triggered when fee is lower than this.balance\n@param _description String with message\n@param _fees The amount of wei it cost to perform this query",
            "id": 1207,
            "name": "OraclizeQueryNotSend",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "indexed": false,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "1246:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1205,
                  "indexed": false,
                  "name": "_fees",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "1267:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1245:36:3"
            },
            "src": "1219:63:3"
          },
          {
            "body": {
              "id": 1219,
              "nodeType": "Block",
              "src": "1493:74:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1212,
                      "name": "priceCheckerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1176,
                      "src": "1499:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1213,
                      "name": "_priceCheckerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1209,
                      "src": "1521:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1499:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "1499:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1216,
                      "name": "_updatePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "1548:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:14:3"
                }
              ]
            },
            "documentation": "@notice Contructor for initializing the pricechecker\n@param _priceCheckerAddress Address which is allow to call `updatePrice()`",
            "id": 1220,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1209,
                  "name": "_priceCheckerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "1448:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1447:30:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 1211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:0:3"
            },
            "scope": 1336,
            "src": "1436:131:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1233,
              "nodeType": "Block",
              "src": "1690:74:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1224,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7512,
                            "src": "1704:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1704:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1226,
                          "name": "priceCheckerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1176,
                          "src": "1718:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1704:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1223,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7515,
                        7516
                      ],
                      "referencedDeclaration": 7515,
                      "src": "1696:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1229,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1230,
                      "name": "_updatePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "1745:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:14:3"
                }
              ]
            },
            "documentation": "@notice Function for updating the price stored in this contract",
            "id": 1234,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1672:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:0:3"
            },
            "scope": 1336,
            "src": "1652:112:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "1800:446:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1828:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1239,
                          "name": "gasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "1835:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1237,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1899,
                          1917
                        ],
                        "referencedDeclaration": 1917,
                        "src": "1810:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) returns (uint256)"
                        }
                      },
                      "id": 1240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1810:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1242,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7547,
                            "src": "1855:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceChecker_$1336",
                              "typeString": "contract PriceChecker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PriceChecker_$1336",
                              "typeString": "contract PriceChecker"
                            }
                          ],
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1847:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1847:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1847:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1810:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1275,
                    "nodeType": "Block",
                    "src": "2021:221:3",
                    "statements": [
                      {
                        "assignments": [
                          1255
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1255,
                            "name": "id",
                            "nodeType": "VariableDeclaration",
                            "scope": 1278,
                            "src": "2029:10:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1254,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2029:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1261,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 1257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2057:5:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f7075626c69632f5469636b65723f706169723d455448455552292e726573756c742e584554485a4555522e615b305d",
                              "id": 1258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2064:79:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2d25a810fc05cb509838303ad8dbabcfa9b1a7d0d3c7faa325ef2002532c1549",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHEUR).result.XETHZEUR.a[0]\""
                              },
                              "value": "json(https://api.kraken.com/0/public/Ticker?pair=ETHEUR).result.XETHZEUR.a[0]"
                            },
                            {
                              "argumentTypes": null,
                              "id": 1259,
                              "name": "gasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "2145:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2d25a810fc05cb509838303ad8dbabcfa9b1a7d0d3c7faa325ef2002532c1549",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHEUR).result.XETHZEUR.a[0]\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1256,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1957,
                              1999,
                              2045,
                              2089,
                              2132,
                              2177,
                              2226,
                              2273,
                              2320,
                              2369,
                              2422,
                              2473,
                              2510,
                              2550,
                              2593,
                              2633,
                              2678,
                              2726,
                              2777,
                              2825,
                              2878,
                              2934,
                              2993,
                              3049,
                              3110,
                              3174,
                              3241,
                              3305,
                              3374,
                              3446,
                              3521,
                              3593,
                              3640,
                              3689,
                              3742,
                              3793,
                              3830,
                              3870,
                              3913,
                              3953,
                              3998,
                              4046,
                              4097,
                              4145,
                              4198,
                              4254,
                              4313,
                              4369,
                              4430,
                              4494,
                              4561,
                              4625,
                              4694,
                              4766,
                              4841,
                              4913
                            ],
                            "referencedDeclaration": 2089,
                            "src": "2042:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                            }
                          },
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2042:112:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2029:125:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1262,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1186,
                              "src": "2162:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 1264,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1263,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1255,
                              "src": "2166:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2162:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2172:4:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2162:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1267,
                        "nodeType": "ExpressionStatement",
                        "src": "2162:14:3"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1269,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1255,
                              "src": "2206:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "55524c",
                                  "id": 1271,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2228:5:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                    "typeString": "literal_string \"URL\""
                                  },
                                  "value": "URL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                    "typeString": "literal_string \"URL\""
                                  }
                                ],
                                "id": 1270,
                                "name": "oraclize_getPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  1899,
                                  1917
                                ],
                                "referencedDeclaration": 1899,
                                "src": "2210:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (string memory) returns (uint256)"
                                }
                              },
                              "id": 1272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2210:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1268,
                            "name": "NewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1201,
                            "src": "2189:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256)"
                            }
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2189:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1274,
                        "nodeType": "EmitStatement",
                        "src": "2184:51:3"
                      }
                    ]
                  },
                  "id": 1276,
                  "nodeType": "IfStatement",
                  "src": "1806:436:3",
                  "trueBody": {
                    "id": 1253,
                    "nodeType": "Block",
                    "src": "1870:145:3",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 1247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1904:77:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "55524c",
                                  "id": 1249,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2001:5:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                    "typeString": "literal_string \"URL\""
                                  },
                                  "value": "URL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                    "typeString": "literal_string \"URL\""
                                  }
                                ],
                                "id": 1248,
                                "name": "oraclize_getPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  1899,
                                  1917
                                ],
                                "referencedDeclaration": 1899,
                                "src": "1983:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (string memory) returns (uint256)"
                                }
                              },
                              "id": 1250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1983:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1246,
                            "name": "OraclizeQueryNotSend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "1883:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256)"
                            }
                          },
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1883:125:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1252,
                        "nodeType": "EmitStatement",
                        "src": "1878:130:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1278,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1789:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1800:0:3"
            },
            "scope": 1336,
            "src": "1768:478:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1317,
              "nodeType": "Block",
              "src": "2434:279:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1286,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7512,
                            "src": "2448:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2448:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1288,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4925,
                            "src": "2462:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2462:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2448:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7515,
                        7516
                      ],
                      "referencedDeclaration": 7515,
                      "src": "2440:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1294,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1186,
                            "src": "2497:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 1296,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1295,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1280,
                            "src": "2501:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2497:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2509:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2497:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7515,
                        7516
                      ],
                      "referencedDeclaration": 7515,
                      "src": "2489:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2489:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "2489:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1301,
                      "name": "ETHEUR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "2521:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1302,
                      "name": "_result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "2530:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2521:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1304,
                  "nodeType": "ExpressionStatement",
                  "src": "2521:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1305,
                      "name": "fidaPerEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1182,
                      "src": "2635:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1307,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1282,
                          "src": "2659:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2668:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          }
                        ],
                        "id": 1306,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5603,
                          5702
                        ],
                        "referencedDeclaration": 5702,
                        "src": "2650:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2650:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2635:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1311,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:35:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1313,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "2695:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1314,
                        "name": "_result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "2700:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1312,
                      "name": "PriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "2682:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,string memory)"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1316,
                  "nodeType": "EmitStatement",
                  "src": "2677:31:3"
                }
              ]
            },
            "documentation": "@notice Oraclize callback function\n@param _id The id of the query\n@param _result Result of the query",
            "id": 1318,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1280,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "2398:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2398:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1282,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "2411:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1281,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2411:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2397:29:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2434:0:3"
            },
            "scope": 1336,
            "src": "2378:335:3",
            "stateMutability": "nonpayable",
            "superFunction": 1867,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1334,
              "nodeType": "Block",
              "src": "2808:80:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1324,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7512,
                            "src": "2822:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2822:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1326,
                          "name": "priceCheckerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1176,
                          "src": "2836:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2822:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7515,
                        7516
                      ],
                      "referencedDeclaration": 7515,
                      "src": "2814:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2814:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "2814:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1330,
                      "name": "gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1189,
                      "src": "2863:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1331,
                      "name": "_gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1320,
                      "src": "2874:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2863:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "2863:20:3"
                }
              ]
            },
            "documentation": "@notice Change gasLimit",
            "id": 1335,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "changeGasLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1320,
                  "name": "_gasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 1335,
                  "src": "2782:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2782:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2781:19:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2808:0:3"
            },
            "scope": 1336,
            "src": "2758:130:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1337,
        "src": "215:2675:3"
      }
    ],
    "src": "0:2891:3"
  },
  "legacyAST": {
    "absolutePath": "/home/shinxs/Projects/fida/contracts/PriceChecker.sol",
    "exportedSymbols": {
      "PriceChecker": [
        1336
      ]
    },
    "id": 1337,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1171,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/home/shinxs/Projects/fida/contracts/oraclizeAPI_0.5.sol",
        "file": "./oraclizeAPI_0.5.sol",
        "id": 1172,
        "nodeType": "ImportDirective",
        "scope": 1337,
        "sourceUnit": 7297,
        "src": "26:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1173,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7296,
              "src": "240:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$7296",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 1174,
            "nodeType": "InheritanceSpecifier",
            "src": "240:13:3"
          }
        ],
        "contractDependencies": [
          7296
        ],
        "contractKind": "contract",
        "documentation": "@title Price Checker\n@author Bram Hoven\n@notice Retrieves the current Ether price in euros and converts it to the amount of fida per ether",
        "fullyImplemented": true,
        "id": 1336,
        "linearizedBaseContracts": [
          1336,
          7296
        ],
        "name": "PriceChecker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1176,
            "name": "priceCheckerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1336,
            "src": "329:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1175,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "329:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1179,
            "name": "ETHEUR",
            "nodeType": "VariableDeclaration",
            "scope": 1336,
            "src": "400:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1177,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "400:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3537312e3835303030",
              "id": 1178,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "423:11:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_16c24a9ed6f62880c5ffaf6710bd823b8f723f3c9abe430ede325cfd5f075b35",
                "typeString": "literal_string \"571.85000\""
              },
              "value": "571.85000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1182,
            "name": "fidaPerEther",
            "nodeType": "VariableDeclaration",
            "scope": 1336,
            "src": "468:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1180,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "468:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3537313835303030",
              "id": 1181,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "498:8:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_57185000_by_1",
                "typeString": "int_const 57185000"
              },
              "value": "57185000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1186,
            "name": "ids",
            "nodeType": "VariableDeclaration",
            "scope": 1336,
            "src": "534:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 1185,
              "keyType": {
                "id": 1183,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "542:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "534:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 1184,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "553:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1189,
            "name": "gasLimit",
            "nodeType": "VariableDeclaration",
            "scope": 1336,
            "src": "610:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1187,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "610:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3538353938",
              "id": 1188,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "629:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_58598_by_1",
                "typeString": "int_const 58598"
              },
              "value": "58598"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@notice Triggered when price is updated\n@param _id Oraclize query id\n@param _price Price of 1 ether in euro's",
            "id": 1195,
            "name": "PriceUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "indexed": false,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "795:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "indexed": false,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "808:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "794:28:3"
            },
            "src": "776:47:3"
          },
          {
            "anonymous": false,
            "documentation": "@notice Triggered when updatePrice() is called\n@param _id Oraclize query id\n@param _fees The price of the oraclize call in ether",
            "id": 1201,
            "name": "NewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1197,
                  "indexed": false,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "1005:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1199,
                  "indexed": false,
                  "name": "_fees",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "1018:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1004:28:3"
            },
            "src": "982:51:3"
          },
          {
            "anonymous": false,
            "documentation": "@notice Triggered when fee is lower than this.balance\n@param _description String with message\n@param _fees The amount of wei it cost to perform this query",
            "id": 1207,
            "name": "OraclizeQueryNotSend",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "indexed": false,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "1246:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1205,
                  "indexed": false,
                  "name": "_fees",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "1267:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1245:36:3"
            },
            "src": "1219:63:3"
          },
          {
            "body": {
              "id": 1219,
              "nodeType": "Block",
              "src": "1493:74:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1212,
                      "name": "priceCheckerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1176,
                      "src": "1499:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1213,
                      "name": "_priceCheckerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1209,
                      "src": "1521:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1499:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "1499:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1216,
                      "name": "_updatePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "1548:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:14:3"
                }
              ]
            },
            "documentation": "@notice Contructor for initializing the pricechecker\n@param _priceCheckerAddress Address which is allow to call `updatePrice()`",
            "id": 1220,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1209,
                  "name": "_priceCheckerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "1448:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1447:30:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 1211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:0:3"
            },
            "scope": 1336,
            "src": "1436:131:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1233,
              "nodeType": "Block",
              "src": "1690:74:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1224,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7512,
                            "src": "1704:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1704:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1226,
                          "name": "priceCheckerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1176,
                          "src": "1718:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1704:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1223,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7515,
                        7516
                      ],
                      "referencedDeclaration": 7515,
                      "src": "1696:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1229,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1230,
                      "name": "_updatePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "1745:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:14:3"
                }
              ]
            },
            "documentation": "@notice Function for updating the price stored in this contract",
            "id": 1234,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1672:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:0:3"
            },
            "scope": 1336,
            "src": "1652:112:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "1800:446:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1828:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1239,
                          "name": "gasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "1835:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1237,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1899,
                          1917
                        ],
                        "referencedDeclaration": 1917,
                        "src": "1810:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) returns (uint256)"
                        }
                      },
                      "id": 1240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1810:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1242,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7547,
                            "src": "1855:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceChecker_$1336",
                              "typeString": "contract PriceChecker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PriceChecker_$1336",
                              "typeString": "contract PriceChecker"
                            }
                          ],
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1847:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1847:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1847:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1810:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1275,
                    "nodeType": "Block",
                    "src": "2021:221:3",
                    "statements": [
                      {
                        "assignments": [
                          1255
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1255,
                            "name": "id",
                            "nodeType": "VariableDeclaration",
                            "scope": 1278,
                            "src": "2029:10:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1254,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2029:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1261,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 1257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2057:5:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f7075626c69632f5469636b65723f706169723d455448455552292e726573756c742e584554485a4555522e615b305d",
                              "id": 1258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2064:79:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2d25a810fc05cb509838303ad8dbabcfa9b1a7d0d3c7faa325ef2002532c1549",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHEUR).result.XETHZEUR.a[0]\""
                              },
                              "value": "json(https://api.kraken.com/0/public/Ticker?pair=ETHEUR).result.XETHZEUR.a[0]"
                            },
                            {
                              "argumentTypes": null,
                              "id": 1259,
                              "name": "gasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "2145:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2d25a810fc05cb509838303ad8dbabcfa9b1a7d0d3c7faa325ef2002532c1549",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHEUR).result.XETHZEUR.a[0]\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1256,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1957,
                              1999,
                              2045,
                              2089,
                              2132,
                              2177,
                              2226,
                              2273,
                              2320,
                              2369,
                              2422,
                              2473,
                              2510,
                              2550,
                              2593,
                              2633,
                              2678,
                              2726,
                              2777,
                              2825,
                              2878,
                              2934,
                              2993,
                              3049,
                              3110,
                              3174,
                              3241,
                              3305,
                              3374,
                              3446,
                              3521,
                              3593,
                              3640,
                              3689,
                              3742,
                              3793,
                              3830,
                              3870,
                              3913,
                              3953,
                              3998,
                              4046,
                              4097,
                              4145,
                              4198,
                              4254,
                              4313,
                              4369,
                              4430,
                              4494,
                              4561,
                              4625,
                              4694,
                              4766,
                              4841,
                              4913
                            ],
                            "referencedDeclaration": 2089,
                            "src": "2042:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                            }
                          },
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2042:112:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2029:125:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1262,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1186,
                              "src": "2162:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 1264,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1263,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1255,
                              "src": "2166:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2162:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2172:4:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2162:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1267,
                        "nodeType": "ExpressionStatement",
                        "src": "2162:14:3"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1269,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1255,
                              "src": "2206:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "55524c",
                                  "id": 1271,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2228:5:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                    "typeString": "literal_string \"URL\""
                                  },
                                  "value": "URL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                    "typeString": "literal_string \"URL\""
                                  }
                                ],
                                "id": 1270,
                                "name": "oraclize_getPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  1899,
                                  1917
                                ],
                                "referencedDeclaration": 1899,
                                "src": "2210:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (string memory) returns (uint256)"
                                }
                              },
                              "id": 1272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2210:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1268,
                            "name": "NewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1201,
                            "src": "2189:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256)"
                            }
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2189:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1274,
                        "nodeType": "EmitStatement",
                        "src": "2184:51:3"
                      }
                    ]
                  },
                  "id": 1276,
                  "nodeType": "IfStatement",
                  "src": "1806:436:3",
                  "trueBody": {
                    "id": 1253,
                    "nodeType": "Block",
                    "src": "1870:145:3",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 1247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1904:77:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "55524c",
                                  "id": 1249,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2001:5:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                    "typeString": "literal_string \"URL\""
                                  },
                                  "value": "URL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                    "typeString": "literal_string \"URL\""
                                  }
                                ],
                                "id": 1248,
                                "name": "oraclize_getPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  1899,
                                  1917
                                ],
                                "referencedDeclaration": 1899,
                                "src": "1983:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (string memory) returns (uint256)"
                                }
                              },
                              "id": 1250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1983:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1246,
                            "name": "OraclizeQueryNotSend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "1883:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256)"
                            }
                          },
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1883:125:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1252,
                        "nodeType": "EmitStatement",
                        "src": "1878:130:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1278,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1789:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1800:0:3"
            },
            "scope": 1336,
            "src": "1768:478:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1317,
              "nodeType": "Block",
              "src": "2434:279:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1286,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7512,
                            "src": "2448:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2448:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1288,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4925,
                            "src": "2462:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2462:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2448:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7515,
                        7516
                      ],
                      "referencedDeclaration": 7515,
                      "src": "2440:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1294,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1186,
                            "src": "2497:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 1296,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1295,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1280,
                            "src": "2501:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2497:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2509:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2497:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7515,
                        7516
                      ],
                      "referencedDeclaration": 7515,
                      "src": "2489:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2489:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "2489:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1301,
                      "name": "ETHEUR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "2521:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1302,
                      "name": "_result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "2530:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2521:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1304,
                  "nodeType": "ExpressionStatement",
                  "src": "2521:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1305,
                      "name": "fidaPerEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1182,
                      "src": "2635:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1307,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1282,
                          "src": "2659:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2668:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          }
                        ],
                        "id": 1306,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5603,
                          5702
                        ],
                        "referencedDeclaration": 5702,
                        "src": "2650:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2650:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2635:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1311,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:35:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1313,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "2695:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1314,
                        "name": "_result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "2700:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1312,
                      "name": "PriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "2682:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,string memory)"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1316,
                  "nodeType": "EmitStatement",
                  "src": "2677:31:3"
                }
              ]
            },
            "documentation": "@notice Oraclize callback function\n@param _id The id of the query\n@param _result Result of the query",
            "id": 1318,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1280,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "2398:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2398:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1282,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "2411:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1281,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2411:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2397:29:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2434:0:3"
            },
            "scope": 1336,
            "src": "2378:335:3",
            "stateMutability": "nonpayable",
            "superFunction": 1867,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1334,
              "nodeType": "Block",
              "src": "2808:80:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1324,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7512,
                            "src": "2822:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2822:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1326,
                          "name": "priceCheckerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1176,
                          "src": "2836:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2822:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7515,
                        7516
                      ],
                      "referencedDeclaration": 7515,
                      "src": "2814:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2814:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "2814:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1330,
                      "name": "gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1189,
                      "src": "2863:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1331,
                      "name": "_gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1320,
                      "src": "2874:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2863:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "2863:20:3"
                }
              ]
            },
            "documentation": "@notice Change gasLimit",
            "id": 1335,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "changeGasLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1320,
                  "name": "_gasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 1335,
                  "src": "2782:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2782:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2781:19:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2808:0:3"
            },
            "scope": 1336,
            "src": "2758:130:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1337,
        "src": "215:2675:3"
      }
    ],
    "src": "0:2891:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-23T08:16:07.892Z"
}